{"version":3,"sources":["../../src/shared/libs/const.tsx","../../src/shared/actions/monitor/index.tsx","../../src/shared/actions/notification/index.tsx","../../src/shared/actions/index.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["createRequestType","base","REQUEST","SUCCESS","FAILURE","LOADMORE","CANCEL","CLEAR","ExampleComponent","text","className","styles","App","ReactDOM","render","document","getElementById"],"mappings":"mQASA,SAAgBA,EAAkBC,GAChC,MAAO,CACLC,QAAYD,EADP,WAELE,QAAYF,EAFP,WAGLG,QAAYH,EAHP,WAILI,SAAaJ,EAJR,YAKLK,OAAWL,EALN,UAMLM,MAAUN,EAAL,UCdqBD,EAAvB,kBAC0BA,EAA1B,qBAC2BA,EAA3B,sBACyBA,EAAzB,oBACoBA,EAApB,eCJgCA,EAAhC,kBACmCA,EAAnC,yBAGiCA,EAAjC,qBAC0BA,EAA1B,qBAC8BA,EAA9B,yBCCwBA,EAAxB,mBAC8BA,EAA9B,yBAIcA,EAAd,SAE0BA,EAA1B,qBAC6BA,EAA7B,wBACoBA,EAApB,eAC2BA,EAA3B,sBAEiCA,EAAjC,4BAG+BA,EAA/B,0BAG8BA,EAA9B,yBACsCA,EAAtC,iCAG+BA,EAA/B,0BAGiBA,EAAjB,YAE8BA,EAA9B,yBAEsBA,EAAtB,iBAC0BA,EAA1B,qBAC2BA,EAA3B,sBAkBuBA,EAAvB,kBACwBA,EAAxB,mBACsBA,EAAtB,iBACqBA,EAArB,gBAEqCA,EAArC,gCAG6BA,EAA7B,wBAE8BA,EAA9B,yBAC6BA,EAA7B,wBACkCA,EAAlC,2BAGgCA,EAAhC,2BAI2CA,EAA3C,8BAGmCA,EAAnC,8BAI4BA,EAA5B,uBAC6BA,EAA7B,wBAC+BA,EAA/B,0BAI6BA,EAA7B,wBAC6BA,EAA7B,wBAE6BA,EAA7B,wBAEyBA,EAAzB,oBACyBA,EAAzB,oBAC2BA,EAA3B,sBAEqBA,EAArB,gBACwBA,EAAxB,mBAC2BA,EAA3B,sBAEuBA,EAAvB,kBAC0BA,EAA1B,qBAC6BA,EAA7B,wBAEyBA,EAAzB,oBAC4BA,EAA5B,uBAC+BA,EAA/B,0BAIuBA,EAAvB,kBAC0BA,EAA1B,qBAC6BA,EAA7B,wBAEoCA,EAApC,+BAGkCA,EAAlC,6BAIuBA,EAAvB,kBAC0BA,EAA1B,qBACoBA,EAApB,eAGuBA,EAAvB,kBAC+BA,EAA/B,0BAG+BA,EAA/B,0BAG+BA,EAA/B,0BAG+BA,EAA/B,0BAGgCA,EAAhC,2BAGgCA,EAAhC,2BAIsBA,EAAtB,iBACyBA,EAAzB,oBACmBA,EAAnB,cAEqCA,EAArC,gCAK+BA,EAA/B,0BAGoCA,EAApC,+BAGkCA,EAAlC,6BAI4BA,EAA5B,uBAC6BA,EAA7B,wBAE2BA,EAA3B,sBACgCA,EAAhC,2BAGmCA,EAAnC,8BAGsCA,EAAtC,iCFhLA,IGKMQ,EAAmB,SAAC,G,IAAEC,SACjC,OAAO,+BAAKC,UAAWC,GAAhB,kBAAP,ICCaC,G,KAJH,WACV,OAAO,kBAAC,EAAD,CAAkBH,KAAK,gDCAhCI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.efd5cf90.chunk.js","sourcesContent":["import { RequestType } from '../types'\r\n\r\nexport function action<ActionType>(\r\n  type: string,\r\n  payload: ActionType | any = {}\r\n) {\r\n  return { type, ...payload }\r\n}\r\n\r\nexport function createRequestType(base: string): RequestType {\r\n  return {\r\n    REQUEST: `${base}_REQUEST`,\r\n    SUCCESS: `${base}_SUCCESS`,\r\n    FAILURE: `${base}_FAILURE`,\r\n    LOADMORE: `${base}_LOADMORE`,\r\n    CANCEL: `${base}_CANCEL`,\r\n    CLEAR: `${base}_CLEAR`\r\n  }\r\n}\r\n","import { createRequestType } from '../../libs'\r\n\r\nexport const GET_MONITOR_ID = createRequestType('GET_MONITOR_ID')\r\nexport const GET_MONITOR_TOKEN = createRequestType('GET_MONITOR_TOKEN')\r\nexport const GET_MONITOR_CONFIG = createRequestType('GET_MONITOR_CONFIG')\r\nexport const GET_MONITOR_LIST = createRequestType('GET_MONITOR_LIST')\r\nexport const SET_MONITOR = createRequestType('SET_MONITOR')\r\n","import { createRequestType } from '../../libs'\r\n\r\nexport const GET_PATIENT_NOTIFY_LIST = createRequestType('PT_NOTIFY_LIST')\r\nexport const GET_PATIENT_NOTIFY_HISTORY = createRequestType(\r\n  'GET_PT_NOTIFY_HISTORY'\r\n)\r\nexport const GET_PATIENT_NOTIFY_BADGE = createRequestType('G_PT_NOTIFY_BADGE')\r\nexport const SET_NOTIFY_READED = createRequestType('SET_NOTIFY_READED')\r\nexport const GET_NOTIFICATION_LIST = createRequestType('GET_NOTIFICATION_LIST')\r\n","import { createRequestType } from '../libs'\r\n\r\nexport const GLOBAL_COLLAPSED = 'global/COLLAPSED'\r\nexport const GLOBAL_INPATIENT_TABLE_STYLE = 'global/INPATIENT_TABLE_STYLE'\r\n\r\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR'\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR'\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR'\r\n\r\nexport const FETCH_INIT_WARD = createRequestType('FETCH_INIT_WARD')\r\nexport const SET_USER_DEFAULT_WARD = createRequestType('SET_USER_DEFAULT_WARD')\r\n\r\nexport const SIDEKICK = 'SIDEKICK'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const LOGIN = createRequestType('LOGIN')\r\n\r\nexport const GET_PATIENT_OWNER = createRequestType('GET_PATIENT_OWNER')\r\nexport const GET_PATIENT_STANDING = createRequestType('GET_PATIENT_STANDING')\r\nexport const ADD_TO_DESK = createRequestType('ADD_TO_DESK')\r\nexport const GET_PATIENT_HEALTH = createRequestType('GET_PATIENT_HEALTH')\r\n\r\nexport const GET_PATIENT_HEALTH_VITAL = createRequestType(\r\n  'GET_PATIENT_HEALTH_VITAL'\r\n)\r\nexport const GET_PATIENT_HEALTH_LAB = createRequestType(\r\n  'GET_PATIENT_HEALTH_LAB'\r\n)\r\nexport const GET_PATIENT_ALLERGIES = createRequestType('GET_PATIENT_ALLERGIES')\r\nexport const GET_PATIENT_RECENT_MEDICATION = createRequestType(\r\n  'GET_PATIENT_RECENT_MEDICATION'\r\n)\r\nexport const GET_PATIENT_HEALTH_DTX = createRequestType(\r\n  'GET_PATIENT_HEALTH_DTX'\r\n)\r\nexport const GET_TEST = createRequestType('GET_TEST')\r\n\r\nexport const GET_PATIENT_HEALTH_IO = createRequestType('GET_PATIENT_HEALTH_IO')\r\n\r\nexport const ADD_NEW_FOCUS = createRequestType('ADD_NEW_FOCUS')\r\nexport const ADD_NEW_VITALSIGN = createRequestType('ADD_NEW_VITALSIGN')\r\nexport const MOVE_FOCUS_SECTION = createRequestType('MOVE_FOCUS_SECTION')\r\n\r\nexport {\r\n  GET_MONITOR_ID,\r\n  GET_MONITOR_TOKEN,\r\n  GET_MONITOR_CONFIG,\r\n  GET_MONITOR_LIST,\r\n  SET_MONITOR\r\n} from './monitor'\r\n\r\nexport {\r\n  GET_PATIENT_NOTIFY_LIST,\r\n  GET_NOTIFICATION_LIST,\r\n  GET_PATIENT_NOTIFY_BADGE,\r\n  GET_PATIENT_NOTIFY_HISTORY,\r\n  SET_NOTIFY_READED\r\n} from './notification'\r\n\r\nexport const ACTIVE_PROBLEM = createRequestType('ACTIVE_PROBLEM')\r\nexport const RESOLVE_PROBLEM = createRequestType('RESOLVE_PROBLEM')\r\nexport const RESOLVE_FOCUS = createRequestType('RESOLVE_FOCUS')\r\nexport const REOPEN_FOCUS = createRequestType('REOPEN_FOCUS')\r\n\r\nexport const GET_PATIENT_PHYSICAL_HISTORY = createRequestType(\r\n  'GET_PATIENT_PHYSICAL_HISTORY'\r\n)\r\nexport const ADD_PATIENT_PHYSICAL = createRequestType('ADD_PATIENT_PHYSICAL')\r\n\r\nexport const FETCH_HISTORY_PROBLEM = createRequestType('FETCH_HISTORY_PROBLEM')\r\nexport const UPDATE_PATIENT_FOCUS = createRequestType('UPDATE_PATIENT_FOCUS')\r\nexport const FETCH_PATIENT_FOCUS_BY_ID = createRequestType(\r\n  'GET_PATIENT_FOCUS_BY_ID'\r\n)\r\nexport const GET_FOCUS_HISTORY_BY_ID = createRequestType(\r\n  'GET_FOCUS_HISTORY_BY_ID'\r\n)\r\n\r\nexport const FETCH_PATIENT_FOCUS_LIST_BY_PERIOD = createRequestType(\r\n  'FETCH_FOCUS_LIST_BY_PERIOD'\r\n)\r\nexport const FETCH_VITAL_SIGN_BY_PERIOD = createRequestType(\r\n  'FETCH_VITAL_SIGN_BY_PERIOD'\r\n)\r\n\r\nexport const NN_LOOKUP_DIAGGROUP = createRequestType('NN_LOOKUP_DIAGGROUP')\r\nexport const NN_LOOKUP_DIAG_ITEMS = createRequestType('NN_LOOKUP_DIAG_ITEMS')\r\nexport const NN_LOOKUP_PROBLEM_LIST = createRequestType(\r\n  'NN_LOOKUP_PROBLEM_LIST'\r\n)\r\n\r\nexport const NN_LOOKUP_GOAL_ITEMS = createRequestType('NN_LOOKUP_GOAL_ITEMS')\r\nexport const NN_LOOKUP_ASSESSMENT = createRequestType('NN_LOOKUP_ASSESSMENT')\r\n\r\nexport const GET_FOCUS_ITEMS_INFO = createRequestType('GET_FOCUS_ITEMS_INFO')\r\n\r\nexport const UPDATE_DIAGGROUP = createRequestType('UPDATE_DIAGGROUP')\r\nexport const UPDATE_DIAGITEMS = createRequestType('UPDATE_DIAGITEMS')\r\nexport const UPDATE_FOCUS_ITEMS = createRequestType('UPDATE_FOCUS_ITEMS')\r\n\r\nexport const NEW_GOALITEM = createRequestType('NEW_GOALITEM')\r\nexport const UPDATE_GOALITEM = createRequestType('UPDATE_GOALITEM')\r\nexport const QUICK_ADD_GOALITEM = createRequestType('QUICK_ADD_GOALITEM')\r\n\r\nexport const NEW_ASSESSMENT = createRequestType('NEW_ASSESSMENT')\r\nexport const UPDATE_ASSESSMENT = createRequestType('UPDATE_ASSESSMENT')\r\nexport const QUICK_ADD_ASSESSMENT = createRequestType('QUICK_ADD_ASSESSMENT')\r\n\r\nexport const NEW_INTERVENTION = createRequestType('NEW_INTERVENTION')\r\nexport const UPDATE_INTERVENTION = createRequestType('UPDATE_INTERVENTION')\r\nexport const QUICK_ADD_INTERVENTION = createRequestType(\r\n  'QUICK_ADD_INTERVENTION'\r\n)\r\n\r\nexport const NEW_EVALUATION = createRequestType('NEW_EVALUATION')\r\nexport const UPDATE_EVALUATION = createRequestType('UPDATE_EVALUATION')\r\nexport const QUICK_ADD_EVALUATION = createRequestType('QUICK_ADD_EVALUATION')\r\n\r\nexport const NN_LOOKUP_INTERVENTION_LIST = createRequestType(\r\n  'NN_LOOKUP_INTERVENTION_LIST'\r\n)\r\nexport const NN_LOOKUP_EVALUATION_LIST = createRequestType(\r\n  'NN_LOOKUP_EVALUATION_LIST'\r\n)\r\n\r\nexport const FETCH_DTX_LIST = createRequestType('FETCH_DTX_LIST')\r\nexport const FETCH_DTX_HISTORY = createRequestType('FETCH_DTX_HISTORY')\r\nexport const ADD_NEW_DTX = createRequestType('ADD_NEW_DTX')\r\n\r\n/// INTAKE & OUTPUT\r\nexport const GET_INITIAL_IO = createRequestType('GET_INITIAL_IO')\r\nexport const GET_CUSTOM_INTAKE_LIST = createRequestType(\r\n  'GET_CUSTOM_INTAKE_LIST'\r\n)\r\nexport const ADD_CUSTOM_INTAKE_ITEM = createRequestType(\r\n  'ADD_CUSTOM_INTAKE_ITEM'\r\n)\r\nexport const GET_CUSTOM_OUTPUT_LIST = createRequestType(\r\n  'GET_CUSTOM_OUTPUT_LIST'\r\n)\r\nexport const ADD_CUSTOM_OUTPUT_ITEM = createRequestType(\r\n  'ADD_CUSTOM_OUTPUT_ITEM'\r\n)\r\nexport const GET_CUSTOM_EXCRETE_LIST = createRequestType(\r\n  'GET_CUSTOM_EXCRETE_LIST'\r\n)\r\nexport const ADD_CUSTOM_EXCRETE_ITEM = createRequestType(\r\n  'ADD_CUSTOM_EXCRETE_ITEM'\r\n)\r\n\r\nexport const FETCH_IO_LIST = createRequestType('FETCH_IO_LIST')\r\nexport const FETCH_IO_HISTORY = createRequestType('FETCH_IO_HISTORY')\r\nexport const ADD_NEW_IO = createRequestType('ADD_NEW_IO')\r\n\r\nexport const FETCH_SELF_VITALSIGN_HISTORY = createRequestType(\r\n  'FETCH_SELF_VITALSIGN_HISTORY'\r\n)\r\n\r\n/// MEDPLAN\r\nexport const GET_MEDICATION_PROFILE = createRequestType(\r\n  'GET_MEDICATION_PROFILE'\r\n)\r\nexport const GET_MEDICATION_PROFILE_STAT = createRequestType(\r\n  'GET_MEDICATION_PROFILE_STAT'\r\n)\r\nexport const GET_MEDICATION_DISPENSING = createRequestType(\r\n  'GET_MEDICATION_DISPENSING'\r\n)\r\n\r\nexport const DISPENSE_MEDICATION = createRequestType('DISPENSE_MEDICATION')\r\nexport const REMOVE_MED_DISPENSED = createRequestType('REMOVE_MED_DISPENSED')\r\n\r\nexport const GET_MEDPLAN_DETAIL = createRequestType('GET_MEDPLAN_DETAIL')\r\nexport const CHANGE_MEDPLAN_INTERVAL = createRequestType(\r\n  'CHANGE_MEDPLAN_INTERVAL'\r\n)\r\nexport const QUICK_SET_MEDPLAN_INTERVAL = createRequestType(\r\n  'QUICK_SET_MEDPLAN_INTERVAL'\r\n)\r\nexport const QUICK_REMOVE_MEDPLAN_INTERVAL = createRequestType(\r\n  'QUICK_REMOVE_MEDPLAN_INTERVAL'\r\n)\r\n","import * as React from 'react'\r\nimport styles from './styles.module.css'\r\n\r\ninterface Props {\r\n  text: string\r\n}\r\n\r\nexport const ExampleComponent = ({ text }: Props) => {\r\n  return <div className={styles.test}>XXX Component: {text}</div>\r\n}\r\n\r\nexport const XExampleComponent = ({ text }: Props) => {\r\n  return <div className={styles.test}>XExample Component: {text}</div>\r\n}\r\n\r\nexport const ABCComponent = ({ text }: Props) => {\r\n  return <div className={styles.test}>TEST XExample Component: {text}</div>\r\n}\r\n\r\nexport { action, createRequestType } from './shared/libs'\r\n\r\nexport * as ActionConst from './shared/actions'\r\n\r\nexport type TypeExample = Props\r\n","import React from 'react'\r\n\r\nimport { ExampleComponent } from 'react-nipd'\r\nimport 'react-nipd/dist/index.css'\r\n\r\nconst App = () => {\r\n  return <ExampleComponent text='Create React Library Example 😄' />\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}